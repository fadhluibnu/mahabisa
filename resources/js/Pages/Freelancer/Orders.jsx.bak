import React, { useState } from 'react';
import { Link, usePage } from '@inertiajs/react';
import FreelancerLayout from '@/Pages/Freelancer/Components/FreelancerLayout'                currentTab === 'in-progress'
                  ? 'border-primary text-primary'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              Dalam Proses ({orderCounts['in-progress'] || 0})
            </button>
            <button
              onClick={() => handleTabChange('delivered')}
              className={`py-3 px-1 border-b-2 font-medium text-sm ${
                currentTab === 'delivered'
                  ? 'border-primary text-primary'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              Terkirim ({orderCounts.delivered || 0})
            </button>
            <button
              onClick={() => handleTabChange('completed')}
              className={`py-3 px-1 border-b-2 font-medium text-sm ${
                currentTab === 'completed'
                  ? 'border-primary text-primary'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              Selesai ({orderCounts.completed || 0})
            </button>t { Head } from '@inertiajs/react';

const Orders = ({ orders, filters, orderCounts }) => {
  const { auth } = usePage().props;
  const [currentTab, setCurrentTab] = useState(filters.status || 'all');
  const [searchTerm, setSearchTerm] = useState(filters.search || '');

  // Format date function
  const formatDate = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('id-ID', { 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    });
  };

  // Format currency function
  const formatCurrency = (amount) => {
    return new Intl.NumberFormat('id-ID', {
      style: 'currency',
      currency: 'IDR',
      minimumFractionDigits: 0
    }).format(amount);
  };

  // Handle search submission
  const handleSearch = (e) => {
    e.preventDefault();
    window.location.href = `/freelancer/orders?status=${currentTab}&search=${searchTerm}`;
  };
  
  // Handle tab change
  const handleTabChange = (tab) => {
    setCurrentTab(tab);
    window.location.href = `/freelancer/orders?status=${tab}&search=${searchTerm}`;
  };

  // Get status badge styling
  const getStatusBadge = (status) => {
    const statusMap = {
      'pending': 'bg-yellow-100 text-yellow-800',
      'in-progress': 'bg-blue-100 text-blue-800',
      'delivered': 'bg-purple-100 text-purple-800',
      'completed': 'bg-green-100 text-green-800',
      'cancelled': 'bg-red-100 text-red-800',
    };

    const statusLabels = {
      'pending': 'Menunggu Konfirmasi',
      'in-progress': 'Dalam Pengerjaan',
      'delivered': 'Menunggu Pembayaran',
      'completed': 'Selesai',
      'cancelled': 'Dibatalkan',
    };

    return (
      <span className={`px-2 py-1 rounded-full text-xs font-semibold ${statusMap[status] || 'bg-gray-100'}`}>
        {statusLabels[status] || status}
      </span>
    );
  };

  // Get current orders based on active tab
  const getCurrentOrders = () => {
    switch (currentTab) {
      case 'active':
        return filterOrders(activeOrders.data || []);
      case 'completed':
        return filterOrders(completedOrders.data || []);
      case 'cancelled':
        return filterOrders(cancelledOrders.data || []);
      default:
        return [];
    }
  };

  // Get pagination data
  const getPagination = () => {
    switch (currentTab) {
      case 'active':
        return activeOrders;
      case 'completed':
        return completedOrders;
      case 'cancelled':
        return cancelledOrders;
      default:
        return { links: [] };
    }
  };

  const currentOrders = getCurrentOrders();
  const pagination = getPagination();

  return (
    <FreelancerLayout user={user}>
      <Head title="Pesanan Saya" />
      
      <div className="container mx-auto py-8 px-4">
        {/* Header */}
        <div className="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
          <h1 className="text-2xl font-bold mb-4 md:mb-0">Pesanan Saya</h1>
          
          {/* Search Bar */}
          <div className="relative">
            <input
              type="text"
              placeholder="Cari pesanan..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="w-full md:w-64 pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
            />
            <div className="absolute left-3 top-1/2 transform -translate-y-1/2">
              <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
          </div>
        </div>
        
        {/* Search Form */}
        <form onSubmit={handleSearch} className="mb-6">
          <div className="flex">
            <input
              type="text"
              placeholder="Cari nomor pesanan, jasa, atau client..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="flex-grow pl-10 pr-4 py-2 rounded-l-lg border border-gray-300 focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
            />
            <button 
              type="submit"
              className="bg-primary text-white px-4 py-2 rounded-r-lg hover:bg-primary-dark"
            >
              Cari
            </button>
          </div>
        </form>
        
        {/* Tab Navigation */}
        <div className="border-b border-gray-200 mb-6">
          <nav className="-mb-px flex flex-wrap space-x-2 md:space-x-6">
            <button
              onClick={() => handleTabChange('all')}
              className={`py-3 px-1 border-b-2 font-medium text-sm ${
                currentTab === 'all'
                  ? 'border-primary text-primary'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              Semua ({orderCounts.all || 0})
            </button>
            <button
              onClick={() => handleTabChange('pending')}
              className={`py-3 px-1 border-b-2 font-medium text-sm ${
                currentTab === 'pending'
                  ? 'border-primary text-primary'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              Pending ({orderCounts.pending || 0})
            </button>
            <button
              onClick={() => handleTabChange('in-progress')}
              className={`py-3 px-1 border-b-2 font-medium text-sm ${
                currentTab === 'in-progress'
                  ? 'border-primary text-primary'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              Dibatalkan ({cancelledOrders.total || 0})
            </button>
          </nav>
        </div>
        
        {/* Orders List */}
        {currentOrders.length > 0 ? (
          <div className="bg-white shadow-md rounded-lg overflow-hidden">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    ID Pesanan
                  </th>
                  <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Klien
                  </th>
                  <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Layanan
                  </th>
                  <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Nilai
                  </th>
                  <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Tanggal
                  </th>
                  <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Status
                  </th>
                  <th scope="col" className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Aksi
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {currentOrders.map((order) => (
                  <tr key={order.id} className="hover:bg-gray-50">
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm font-medium text-gray-900">{order.order_number}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        <div className="flex-shrink-0 h-10 w-10">
                          <img 
                            className="h-10 w-10 rounded-full" 
                            src={order.client?.profile?.avatar_url || "https://ui-avatars.com/api/?name=" + encodeURIComponent(order.client?.name || "User")} 
                            alt={order.client?.name} 
                          />
                        </div>
                        <div className="ml-4">
                          <div className="text-sm font-medium text-gray-900">{order.client?.name}</div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="text-sm text-gray-900">{order.service?.title || order.project?.title || 'Custom Project'}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-green-600 font-medium">{formatCurrency(order.amount)}</div>
                      <div className="text-xs text-gray-500">
                        Penghasilan: {formatCurrency(order.freelancer_earning)}
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-500">{formatDate(order.created_at)}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      {getStatusBadge(order.status)}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                      <Link
                        href={`/freelancer/orders/${order.id}`}
                        className="text-primary hover:text-primary-dark"
                      >
                        Detail
                      </Link>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        ) : (
          <div className="bg-white shadow-md rounded-lg p-6 text-center">
            <svg className="w-16 h-16 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
            <h3 className="text-lg font-medium text-gray-900 mb-1">Tidak Ada Pesanan</h3>
            <p className="text-gray-500">
              {currentTab === 'active' && 'Anda tidak memiliki pesanan aktif saat ini.'}
              {currentTab === 'completed' && 'Anda belum memiliki pesanan yang selesai.'}
              {currentTab === 'cancelled' && 'Anda tidak memiliki pesanan yang dibatalkan.'}
            </p>
          </div>
        )}
        
        {/* Pagination */}
        {pagination.links && pagination.links.length > 3 && (
          <div className="mt-6 flex justify-center">
            <nav className="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
              {pagination.links.map((link, i) => (
                <Link
                  key={i}
                  href={link.url}
                  className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${
                    link.active
                      ? 'z-10 bg-primary border-primary text-white'
                      : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'
                  } ${!link.url ? 'cursor-not-allowed' : ''}`}
                  dangerouslySetInnerHTML={{ __html: link.label }}
                />
              ))}
            </nav>
          </div>
        )}
      </div>
    </FreelancerLayout>
  );
};

export default Orders;
